ifeq (1,${V})
	SILENT =
else
	SILENT = @
endif

PROJECT = sousvide_tests

CFLAGS= -I ./src \
        -I ./test \
        -I ./reacto-0.1.0-rc2/includes \
        -Wall \
        -std=gnu11 \
        -g \
        -O0 \
        -D REACTO_SHORT_LOGS \
        
        
CPPFLAGS= -I ./src \
        -I ./test \
        -I ./reacto-0.1.0-rc2/includes \
        -Wall \
        -std=c++14 \
        -g \
        -O0 \
        -D REACTO_SHORT_LOGS 

LDFLAGS=

OBJDIR = objs_test
SRCFILES = \

SRCDIRS = \
    test \

get_src_from_dir  = $(wildcard $1/*.cpp) $(wildcard $1/*.c)
get_dirs_from_dirspec  = $(wildcard $1)
get_src_from_dir_list = $(foreach dir, $1, $(call get_src_from_dir,$(dir)))
SRCS += $(SRCFILES) $(call get_src_from_dir_list, $(SRCDIRS))

__src_to = $(subst .c,$1, $(subst .cpp,$1,$2))
src_to = $(addprefix $(OBJDIR)/,$(call __src_to,$1,$2))
src_to_o = $(call src_to,.o,$1)
OBJS = $(call src_to_o,$(SRCS))

DEPS := $(OBJS:.o=.d)
-include $(DEPS)

all: $(PROJECT) run

run:
	./$(PROJECT)

$(PROJECT): buildrepo $(OBJS)
	@echo
	@echo Linking $(PROJECT)
	$(SILENT)$(CXX) $(OBJS) $(LDFLAGS) -o $@
	@chmod +x $(PROJECT)

$(OBJDIR)/%.o: %.cpp
	@echo
	@echo Compiling $(notdir $<)
	$(SILENT)$(CXX) $(CPPFLAGS) -MMD -c $< -o $@

$(OBJDIR)/%.o: %.c
	@echo
	@echo Compiling $(notdir $<)
	$(SILENT)$(CC) $(CFLAGS) -MMD -c $< -o $@

clean:
	rm $(PROJECT) $(OBJDIR) -Rf

buildrepo:
	@$(call make-repo)

# Create obj directory structure
define make-repo
	mkdir -p $(OBJDIR)
	for dir in $(SRCDIRS); \
	do \
		mkdir -p $(OBJDIR)/$$dir; \
	done
endef
